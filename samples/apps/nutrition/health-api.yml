apiVersion: v1
kind: Namespace
metadata:
  name: health-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: health-api
  name: health-api
  namespace: health-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: health-api
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        policy.cilium.io/proxy-visibility: "<Egress/53/UDP/DNS>,<Egress/30000/TCP/HTTP>"
      labels:
        app: health-api
        name: health-api
        version: v1
    spec:
      containers:
      - image: fidelissauro/health-api:latest
        name: health-api
        env:
        - name: ENVIRONMENT
          value: "dev"
        - name: JAEGER_COLLECTOR_ENDPOINT
          value: http://jaeger-collector.jaeger.svc.cluster.local:14268/api/traces          
        - name: BMR_SERVICE_ENDPOINT
          value: "bmr-grpc.bmr.svc.cluster.local:30000"
        - name: IMC_SERVICE_ENDPOINT
          value: "imc-grpc.imc.svc.cluster.local:30000"
        - name: RECOMMENDATIONS_SERVICE_ENDPOINT
          value: "recommendations-grpc.recommendations.svc.cluster.local:30000"
        - name: NATS_URI
          value: "nats://nats-headless.nats.svc.cluster.local:4222"                              
        ports:
        - containerPort: 8080
          name: http   
        startupProbe:
          failureThreshold: 10
          httpGet:
            path: /healthcheck
            port: 8080
          periodSeconds: 10
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /healthcheck
            port: 8080          
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: health-api
  namespace: health-api
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080" 
  labels:
    app.kubernetes.io/name: health-api
    app.kubernetes.io/instance: health-api 
    workload: nutrition
spec:
  ports:
  - name: web
    port: 8080
    protocol: TCP
  selector:
    app: health-api
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: health-api
  namespace: health-api
spec:
  ingressClassName: cilium
  rules:
  - host: health.msfidelis.com.br
    http:
      paths:
      - backend:
          service:
            name: health-api
            port:
              number: 8080
        path: /
        pathType: Prefix